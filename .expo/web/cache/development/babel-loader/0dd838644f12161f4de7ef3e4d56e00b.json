{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport arrow from \"../assets/icons/Arrow.svg\";\nimport backgroundWork from \"../assets/images/backgroundWork.svg\";\nimport avatar from \"../assets/images/avatar.svg\";\nimport replay from \"../assets/icons/replay.svg\";\nimport { WorkStyle } from \"../assets/styles/WorkStyle\";\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Run(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(30),\n    _useState2 = _slicedToArray(_useState, 2),\n    time = _useState2[0],\n    setTime = _useState2[1];\n  var NavigateHome = function NavigateHome() {\n    navigation.navigate('Home');\n  };\n  if (time == 0) {\n    clearTimeout();\n  } else {\n    setTimeout(function () {\n      setTime(time - 1);\n    }, 1000);\n  }\n  var replayTimer = function replayTimer() {\n    if (time == 0) {\n      setTimeout(function () {\n        setTime(time = 30);\n      });\n    } else {\n      clearTimeout(time = 31);\n    }\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(TouchableHighlight, {\n      onPress: NavigateHome,\n      style: styles.touchArrow,\n      children: _jsx(Image, {\n        style: styles.arrow,\n        source: arrow\n      })\n    }), _jsx(Image, {\n      style: styles.avatar,\n      source: avatar\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"Run\"\n    }), _jsx(Text, {\n      style: styles.task,\n      children: \"Task 100m\"\n    }), _jsxs(Text, {\n      style: styles.timer,\n      onChange: setTime,\n      children: [time, \"s\"]\n    }), _jsx(TouchableHighlight, {\n      onPress: replayTimer,\n      style: styles.touchPlay,\n      children: _jsx(Image, {\n        style: styles.replay,\n        source: replay\n      })\n    }), _jsx(Image, {\n      style: styles.backgroundWork,\n      source: backgroundWork\n    })]\n  });\n}\nvar styles = StyleSheet.create(WorkStyle);","map":{"version":3,"names":["arrow","backgroundWork","avatar","replay","WorkStyle","useState","Run","navigation","time","setTime","NavigateHome","navigate","clearTimeout","setTimeout","replayTimer","styles","container","touchArrow","title","task","timer","touchPlay","StyleSheet","create"],"sources":["C:/Users/yanni/.vscode/Pers_GIT/Sport_App_React_Native/pages/Run.js"],"sourcesContent":["import { StyleSheet, Text, SafeAreaView, Image, TouchableHighlight } from 'react-native';\r\nimport arrow from '../assets/icons/Arrow.svg'\r\nimport backgroundWork from '../assets/images/backgroundWork.svg'\r\nimport avatar from '../assets/images/avatar.svg'\r\nimport replay from '../assets/icons/replay.svg'\r\nimport { WorkStyle } from '../assets/styles/WorkStyle';\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nexport default function Run({ navigation }) {\r\n\r\n    let [time, setTime] = useState(30)\r\n\r\n    const NavigateHome = () => {\r\n        navigation.navigate('Home')\r\n    }\r\n\r\n    if (time == 0) {\r\n        clearTimeout()\r\n    } else {\r\n        setTimeout(() => {\r\n            setTime(time - 1)\r\n        }, 1000)\r\n    }\r\n\r\n    const replayTimer = () => {\r\n        if (time == 0) {\r\n            setTimeout(() => {\r\n                setTime(time = 30)\r\n            })\r\n        } else {\r\n            clearTimeout(time = 31)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <TouchableHighlight onPress={NavigateHome} style={styles.touchArrow}>\r\n                <Image style={styles.arrow} source={arrow} />\r\n            </TouchableHighlight>\r\n            <Image style={styles.avatar} source={avatar} />\r\n            <Text style={styles.title}>Run</Text>\r\n            <Text style={styles.task}>Task 100m</Text>\r\n            <Text style={styles.timer} onChange={setTime}>{time}s</Text>\r\n            <TouchableHighlight onPress={replayTimer} style={styles.touchPlay}>\r\n                <Image style={styles.replay} source={replay} />\r\n            </TouchableHighlight>\r\n            <Image style={styles.backgroundWork} source={backgroundWork} />\r\n        </SafeAreaView>\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create(WorkStyle);\r\n"],"mappings":";;;;;;AACA,OAAOA,KAAK;AACZ,OAAOC,cAAc;AACrB,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,SAASC,SAAS;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAIjC,eAAe,SAASC,GAAG,OAAiB;EAAA,IAAdC,UAAU,QAAVA,UAAU;EAEpC,gBAAsBF,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7BG,IAAI;IAAEC,OAAO;EAElB,IAAMC,YAAY,GAAG,SAAfA,YAAY,GAAS;IACvBH,UAAU,CAACI,QAAQ,CAAC,MAAM,CAAC;EAC/B,CAAC;EAED,IAAIH,IAAI,IAAI,CAAC,EAAE;IACXI,YAAY,EAAE;EAClB,CAAC,MAAM;IACHC,UAAU,CAAC,YAAM;MACbJ,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;EACZ;EAEA,IAAMM,WAAW,GAAG,SAAdA,WAAW,GAAS;IACtB,IAAIN,IAAI,IAAI,CAAC,EAAE;MACXK,UAAU,CAAC,YAAM;QACbJ,OAAO,CAACD,IAAI,GAAG,EAAE,CAAC;MACtB,CAAC,CAAC;IACN,CAAC,MAAM;MACHI,YAAY,CAACJ,IAAI,GAAG,EAAE,CAAC;IAC3B;EACJ,CAAC;EAED,OACI,MAAC,YAAY;IAAC,KAAK,EAAEO,MAAM,CAACC,SAAU;IAAA,WAClC,KAAC,kBAAkB;MAAC,OAAO,EAAEN,YAAa;MAAC,KAAK,EAAEK,MAAM,CAACE,UAAW;MAAA,UAChE,KAAC,KAAK;QAAC,KAAK,EAAEF,MAAM,CAACf,KAAM;QAAC,MAAM,EAAEA;MAAM;IAAG,EAC5B,EACrB,KAAC,KAAK;MAAC,KAAK,EAAEe,MAAM,CAACb,MAAO;MAAC,MAAM,EAAEA;IAAO,EAAG,EAC/C,KAAC,IAAI;MAAC,KAAK,EAAEa,MAAM,CAACG,KAAM;MAAA;IAAA,EAAW,EACrC,KAAC,IAAI;MAAC,KAAK,EAAEH,MAAM,CAACI,IAAK;MAAA;IAAA,EAAiB,EAC1C,MAAC,IAAI;MAAC,KAAK,EAAEJ,MAAM,CAACK,KAAM;MAAC,QAAQ,EAAEX,OAAQ;MAAA,WAAED,IAAI;IAAA,EAAS,EAC5D,KAAC,kBAAkB;MAAC,OAAO,EAAEM,WAAY;MAAC,KAAK,EAAEC,MAAM,CAACM,SAAU;MAAA,UAC9D,KAAC,KAAK;QAAC,KAAK,EAAEN,MAAM,CAACZ,MAAO;QAAC,MAAM,EAAEA;MAAO;IAAG,EAC9B,EACrB,KAAC,KAAK;MAAC,KAAK,EAAEY,MAAM,CAACd,cAAe;MAAC,MAAM,EAAEA;IAAe,EAAG;EAAA,EACpD;AAEvB;AAGA,IAAMc,MAAM,GAAGO,UAAU,CAACC,MAAM,CAACnB,SAAS,CAAC"},"metadata":{},"sourceType":"module"}